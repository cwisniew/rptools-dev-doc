(self.webpackChunkmaptool_dev_doc=self.webpackChunkmaptool_dev_doc||[]).push([[406],{17255:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return h},default:function(){return p}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),o=t(93456),l=["components"],s={},d="Handshake and Authentication",c={unversionedId:"networking/authentication",id:"networking/authentication",isDocsHomePage:!1,title:"Handshake and Authentication",description:"Last Updated: MapTool 1.10",source:"@site/docs/networking/authentication.md",sourceDirName:"networking",slug:"/networking/authentication",permalink:"/docs/networking/authentication",editUrl:"https://github.com/cwisniew/rptools-dev-doc/edit/main/docs/networking/authentication.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RPTools Development Doctunation Intro",permalink:"/docs/intro"}},h=[{value:"Blocked Player",id:"blocked-player",children:[]},{value:"Player using public key authentication",id:"player-using-public-key-authentication",children:[]},{value:"Player using shared password authentication",id:"player-using-shared-password-authentication",children:[]}],u={toc:h};function p(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"handshake-and-authentication"},"Handshake and Authentication"),(0,i.kt)("p",null,"Last Updated: MapTool 1.10"),(0,i.kt)("p",null,"The handshake and authentication occurs before Hessian is used"),(0,i.kt)("h2",{id:"blocked-player"},"Blocked Player"),(0,i.kt)(o.Mermaid,{chart:"\n%%{init: {'theme': 'base', 'themeVariables': { 'signalColor': '#e0081a', 'textColor': '#e0081a' }}}%%\n  sequenceDiagram\n    Client->>Server: ClientInitMsg\n    Server->>Server: Lookup Player from ClientInitMsg<br/>\n    Server->>Client: Send PlayerBlockedMsg\n    Client->>Client: Inform Player<br/>and disconnect.",mdxType:"Mermaid"}),(0,i.kt)("h2",{id:"player-using-public-key-authentication"},"Player using public key authentication"),(0,i.kt)(o.Mermaid,{chart:"\n%%{init: {'theme': 'base', 'themeVariables': { 'signalColor': '#e0081a', 'textColor': '#e0081a' }}}%%\n  sequenceDiagram\n    Client->>Server: ClientInitMsg\n    Server->>Server: Lookup Player from ClientInitMsg<br/>and retrieve password salt\n    Server->>Server: Create HandshakeChallenge\n    Server->>Server: Encrypt Challenge with public key\n    Server->>Client: Send UseAuthTypeMsg\n    Note right of Server: auth_type = ASYMMETRIC_KEY<br/> challenge[0] = HandshakeChallenge.challenge\n    Client->>Client: Decrypt Handshake Challenge\n    Client->>Server: Send ClientAuthMsg\n    Note left of Client:(not encrypted)<br/>challenge_response = HanshakeChallenge.response\n    Server->>Client: Send ConnectionSuccessfulMsg",mdxType:"Mermaid"}),(0,i.kt)("h2",{id:"player-using-shared-password-authentication"},"Player using shared password authentication"),(0,i.kt)(o.Mermaid,{chart:"\n%%{init: {'theme': 'base', 'themeVariables': { 'signalColor': '#e0081a', 'textColor': '#e0081a' }}}%%\n  sequenceDiagram\n  Client->>Server: ClientInitMsg\nServer->>Server: Lookup Player from ClientInitMsg and<br/>retrieve password salt\nServer->>Server: Create HandshakeChallenge<br/>Player Password\nnote right of Server: If using player database<br/> with known players and player<br/>is GM then a new random<br/>password is used so this<br/> would never match.\nServer->>Client: Send UseAuthTypeMsg\nnote right of Client: auth_type = SHARED_PASSWORD<br/> salt = retrieved password salt<br/> challenge[0] = HandshakeChallenge.challenge (gm)<br/> challenge[1] = HandshakeChallenge.challenge (player)<br/>\nClient->>Client: Hash password with<br/>PBKDF2WithHmacSHA1<br/>using salt sent by Server\nClient->>Client: Try decrypt both challenges\nClient->>Client: Encrypt HandshakeChallenge.response\nClient->>Server: Send ClientAuthMsg\nnote right of Server: challenge_response = Encrypted HandshakeChallenge.response\nServer->>Server: Compare client challenge response to<br/>preencrypted challenge response on server<br/>side to determine which password was used\nServer->>Client: Send ConnectionSuccessfulMsg",mdxType:"Mermaid"}))}p.isMDXComponent=!0},11748:function(e,n,t){var r={"./locale":89234,"./locale.js":89234};function a(e){var n=i(e);return t(n)}function i(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=i,e.exports=a,a.id=11748}}]);